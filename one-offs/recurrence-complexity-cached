#!/usr/bin/ruby

$a_cache = {}
$b_cache = {}
$c_cache = {}

def A(n)
	k = $a_cache[n]
	return k unless k.nil?

	if n <= 1
		rv = 1
	else
		rv = 1+A(n-1)
	end
	$a_cache[n] = rv
	rv
end

def B(n)
	k = $b_cache[n]
	return k unless k.nil?

	if n <= 2
		rv = 1
	else
		rv = 1+B(n-1)+B(n-2)
	end
	$b_cache[n] = rv
	rv
end

def C(n)
	k = $c_cache[n]
	return k unless k.nil?

	if n <= 3
		rv = 1
	else
		rv = 1+C(n-1)+C(n-2)+C(n-3)
	end
	$c_cache[n] = rv
	rv

end

nmax=10
nmax = ARGV[0].to_i if ARGV.length == 1
(1..nmax).each do |n|
    puts "#{n} #{A(n)} #{B(n)} #{C(n)}"
end

